@model Project_64132985.Models.Customer
@{
    ViewBag.Title = "Hồ sơ tài khoản";
}
<style>

    input:focus {
        box-shadow: 0 0 8px rgb(45 123 230 / 60%)
    }
    input {
        transition: 0.3s ease
    }
    .scroll-slides {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
</style>
<div>
    <div class="flex items-center bg-[#f6f6f6] px-6 py-10 lg:px-[100px] lg:py-[60px]">
        <div class="flex flex-col gap-2" data-aos="fade-right">
            <span class="font-semibold text-[22px] lg:text-[19px]">Hồ sơ tài khoản</span>
        </div>
    </div>
    <div class="mt-[60px] bg-white px-6 lg:px-[100px]">
        <div class="flex flex-col gap-10 lg:flex-row">
            @*Phần menu*@
            <ul class="scroll-slides flex max-w-full flex-row gap-3 overflow-x-scroll lg:w-[200px] lg:flex-col lg:gap-3 lg:py-[60px]">
                <li class="">
                    <a href=@Url.Action("Index", "Account_64132985") class="flex min-w-[140px] items-center gap-2 px-3 py-3 opacity-70 hover:cursor-pointer hover:text-black lg:py-2">
                        <ion-icon name="cart-outline" class="text-black text-[23px] lg:text-[25px]"></ion-icon>
                        <span class="font-medium text-[17px] lg:text-[14px]">Đơn mua</span>
                    </a>
                </li>
                <li class="">
                    <a href=@Url.Action("Address", "Account_64132985") class="flex min-w-[140px] items-center gap-2 px-3 py-3 text-black opacity-100 transition-all duration-300 hover:cursor-pointer hover:text-black lg:py-2">
                        <ion-icon name="person-outline" class="text-black text-[23px] lg:text-[25px]"></ion-icon>
                        <span class="font-medium text-[17px] lg:text-[14px]">Thông tin</span>
                    </a>
                </li>
                <li class="">
                    <a href=@Url.Action("ChangePassword", "Account_64132985") class="flex min-w-[140px] items-center gap-2 rounded px-3 py-3 opacity-70 transition-all duration-300 hover:cursor-pointer hover:text-black hover:opacity-100 lg:py-2">
                        <ion-icon name="key-outline" class="text-black text-[23px] lg:text-[25px]"></ion-icon>
                        <span class="font-medium text-[17px] lg:text-[14px]">Mật khẩu</span>
                    </a>
                </li>
                <li class="">
                    <a href=@Url.Action("AccountDetail", "Account_64132985") class="flex min-w-[140px] items-center gap-2 rounded px-3 py-3 opacity-70 transition-all duration-300 hover:cursor-pointer hover:text-black hover:opacity-100 lg:py-2">
                        <ion-icon name="mail-outline" class="text-black text-[23px] lg:text-[25px]"></ion-icon>
                        <span class="font-medium text-[17px] lg:text-[14px]">Email</span>
                    </a>
                </li>
                <li class="">
                    <a href=@Url.Action("Logout", "Home_64132985") class="flex min-w-[140px] items-center gap-2 rounded px-3 py-3 opacity-70 transition-all duration-300 hover:cursor-pointer hover:text-black hover:bg-[#F6F6F6] hover:opacity-100 lg:py-2">
                        <ion-icon name="log-out-outline" class="text-black text-[23px] lg:text-[25px]"></ion-icon>
                        <span class="font-medium text-[17px] lg:text-[14px]">Đăng xuất</span>
                    </a>
                </li>
            </ul>
            <div class="hidden h-[500px] w-[1px] bg-gray-200 lg:block"></div>
            @*Phần detail của menu*@
            <div>
                <span class="font-medium lg:text-[18px]">Thông tin tài khoản</span>
                <div class="mt-4 py-[30px]">
                    <div class="flex min-w-[300px] flex-col gap-4 lg:gap-3">
                        <div class="flex flex-col gap-1">
                            <label for="name" class="text-[#474B57] lg:text-[14px]">Họ tên</label>
                            <input id="name" type="text" placeholder="Họ tên của bạn" value="@Model.CustomerName" class="border-200 w-full rounded border px-3 py-2 outline-none lg:text-[14px]" />
                            <span class="error-name text-red-500 lg:text-[13px]"></span>
                        </div>
                        <div class="flex flex-col gap-1">
                            <label for="phone" class="text-[#474B57] lg:text-[14px]">Số điện thoại</label>
                            <input id="phone" type="text" placeholder="Số điện thoại của bạn" value="@Model.PhoneNumber" class="border-200 w-full rounded border px-3 py-2 outline-none lg:text-[14px]" />
                            <span class="error-phone text-red-500 lg:text-[13px]"></span>
                        </div>
                        <div class="flex flex-col gap-2">
                            <label class="text-[#474B57] lg:text-[14px]" for="addr">Địa chỉ</label>
                            <input type="text" placeholder="Địa chỉ của bạn" id="addr" value="@Model.Addr" class="border-200 w-full rounded border px-3 py-2 outline-none lg:text-[14px]" />
                            <span class="error-address text-red-500 lg:text-[13px]"></span>
                        </div>
                    </div>
                    <button class="apply opacity-60 mt-8 rounded bg-black px-4 py-2 text-white transition-all duration-300 lg:text-[13px]" disabled>Thay đổi</button>
                    
                </div>
            </div>
        </div>
    </div>
</div>

@section ChangeAddress{
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const btnChange = document.querySelector(".apply");
            const addressInput = document.querySelector("#addr");
            const nameInput = document.querySelector("#name");
            const phone = document.querySelector("#phone");
            const errorPhone = document.querySelector(".error-phone");
            const errorName = document.querySelector(".error-name");
            const errorAddress = document.querySelector(".error-address")
            phone.addEventListener("input", () => {
                errorPhone.textContent = "";
                phone.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
                btnChange.disabled = false;
                btnChange.classList.remove("opacity-60");
               
            })
            addressInput.addEventListener("input", () => {
                errorAddress.textContent = ""
                btnChange.disabled = false;
                addressInput.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
                btnChange.classList.remove("opacity-60");
                
            })
            

            nameInput.addEventListener("input", () => {
                errorName.textContent = ""
                btnChange.disabled = false;
                btnChange.classList.remove("opacity-60");
                nameInput.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
               
            })

            btnChange.addEventListener("click", () => {
                let flag = false
                
                if (nameInput.value === "") {
                    flag = true;
                    errorName.textContent = "Tên không được trống";
                    nameInput.classList.add("border-[#fc3939]", "bg-[#fff2f4]");
                } else {
                    errorName.textContent = "";
                    nameInput.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
                }
                if (addressInput.value === "") {
                    flag = true;
                    errorAddress.textContent = "Địa chỉ không được trống";
                    addressInput.classList.add("border-[#fc3939]", "bg-[#fff2f4]");
                } else {
                    errorAddress.textContent = "";
                    addressInput.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
                }
                if (phone.value === "") {
                    errorPhone.textContent = "Số điện thoại không được trống";
                    flag = true;
                    phone.classList.add("border-[#fc3939]", "bg-[#fff2f4]");
                }
                else if (!phone.value.match(/(84|0[3|5|7|8|9])+([0-9]{8})\b/g)) {
                    errorPhone.textContent = "Số điện thoại không hợp lệ";
                    flag = true;
                    phone.classList.add("border-[#fc3939]", "bg-[#fff2f4]");
                } else {
                    errorPhone.textContent = "";
                    phone.classList.remove("border-[#fc3939]", "bg-[#fff2f4]");
                }

                if (!flag) {
                    btnChange.disabled = true;
                    btnChange.classList.add("opacity-60");
                    btnChange.textContent = "Đang xử lý...";
                    fetch("Account_64132985/ChangeInfo", {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            newAddress: addressInput.value,
                            newName: nameInput.value,
                            newPhone: phone.value
                        })
                    }).then((response) => response.json())
                        .then((data) => {
                            if (!data.success) {
                                console.log(data.message);
                            } else {
                                btnChange.disabled = true;
                                btnChange.classList.add("opacity-60");
                                btnChange.textContent = "Thay đổi";
                                Toastify({
                                    text: data.message,
                                    className: "info",
                                    position: "center",
                                    duration: 2000,
                               
                                    avatar: "https://static.vecteezy.com/system/resources/thumbnails/017/350/123/small_2x/green-check-mark-icon-in-round-shape-design-png.png",
                                    style: {
                                        background: "white",
                                        color: "black",
                                        display: "flex",
                                        alignItems: "center",
                                        gap: "10px",

                                    }
                                }).showToast();
                            }
                        })
                }
            })
        })


    </script>    
    
    
    
    
} 